// Code generated by go-swagger; DO NOT EDIT.

package definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CardUpdateBody card update body
//
// swagger:model CardUpdateBody
type CardUpdateBody struct {

	// card name
	// Enum: ["power_click","auto_clicker","energy_booster"]
	CardName string `json:"card_name,omitempty"`
}

// Validate validates this card update body
func (m *CardUpdateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cardUpdateBodyTypeCardNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["power_click","auto_clicker","energy_booster"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cardUpdateBodyTypeCardNamePropEnum = append(cardUpdateBodyTypeCardNamePropEnum, v)
	}
}

const (

	// CardUpdateBodyCardNamePowerClick captures enum value "power_click"
	CardUpdateBodyCardNamePowerClick string = "power_click"

	// CardUpdateBodyCardNameAutoClicker captures enum value "auto_clicker"
	CardUpdateBodyCardNameAutoClicker string = "auto_clicker"

	// CardUpdateBodyCardNameEnergyBooster captures enum value "energy_booster"
	CardUpdateBodyCardNameEnergyBooster string = "energy_booster"
)

// prop value enum
func (m *CardUpdateBody) validateCardNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, cardUpdateBodyTypeCardNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CardUpdateBody) validateCardName(formats strfmt.Registry) error {
	if swag.IsZero(m.CardName) { // not required
		return nil
	}

	// value enum
	if err := m.validateCardNameEnum("card_name", "body", m.CardName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this card update body based on context it is used
func (m *CardUpdateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardUpdateBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardUpdateBody) UnmarshalBinary(b []byte) error {
	var res CardUpdateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
