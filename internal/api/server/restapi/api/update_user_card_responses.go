// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// UpdateUserCardOKCode is the HTTP code returned for type UpdateUserCardOK
const UpdateUserCardOKCode int = 200

/*
UpdateUserCardOK Update Card Response

swagger:response updateUserCardOK
*/
type UpdateUserCardOK struct {

	/*
	  In: Body
	*/
	Payload *models.CardBody `json:"body,omitempty"`
}

// NewUpdateUserCardOK creates UpdateUserCardOK with default headers values
func NewUpdateUserCardOK() *UpdateUserCardOK {

	return &UpdateUserCardOK{}
}

// WithPayload adds the payload to the update user card o k response
func (o *UpdateUserCardOK) WithPayload(payload *models.CardBody) *UpdateUserCardOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user card o k response
func (o *UpdateUserCardOK) SetPayload(payload *models.CardBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserCardOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserCardBadRequestCode is the HTTP code returned for type UpdateUserCardBadRequest
const UpdateUserCardBadRequestCode int = 400

/*
UpdateUserCardBadRequest Bad request

swagger:response updateUserCardBadRequest
*/
type UpdateUserCardBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateUserCardBadRequest creates UpdateUserCardBadRequest with default headers values
func NewUpdateUserCardBadRequest() *UpdateUserCardBadRequest {

	return &UpdateUserCardBadRequest{}
}

// WithPayload adds the payload to the update user card bad request response
func (o *UpdateUserCardBadRequest) WithPayload(payload *models.Error) *UpdateUserCardBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user card bad request response
func (o *UpdateUserCardBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserCardBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserCardForbiddenCode is the HTTP code returned for type UpdateUserCardForbidden
const UpdateUserCardForbiddenCode int = 403

/*
UpdateUserCardForbidden Forbidden

swagger:response updateUserCardForbidden
*/
type UpdateUserCardForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateUserCardForbidden creates UpdateUserCardForbidden with default headers values
func NewUpdateUserCardForbidden() *UpdateUserCardForbidden {

	return &UpdateUserCardForbidden{}
}

// WithPayload adds the payload to the update user card forbidden response
func (o *UpdateUserCardForbidden) WithPayload(payload *models.Error) *UpdateUserCardForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user card forbidden response
func (o *UpdateUserCardForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserCardForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserCardUnprocessableEntityCode is the HTTP code returned for type UpdateUserCardUnprocessableEntity
const UpdateUserCardUnprocessableEntityCode int = 422

/*
UpdateUserCardUnprocessableEntity Unprocessable Entity

swagger:response updateUserCardUnprocessableEntity
*/
type UpdateUserCardUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateUserCardUnprocessableEntity creates UpdateUserCardUnprocessableEntity with default headers values
func NewUpdateUserCardUnprocessableEntity() *UpdateUserCardUnprocessableEntity {

	return &UpdateUserCardUnprocessableEntity{}
}

// WithPayload adds the payload to the update user card unprocessable entity response
func (o *UpdateUserCardUnprocessableEntity) WithPayload(payload *models.Error) *UpdateUserCardUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user card unprocessable entity response
func (o *UpdateUserCardUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserCardUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserCardInternalServerErrorCode is the HTTP code returned for type UpdateUserCardInternalServerError
const UpdateUserCardInternalServerErrorCode int = 500

/*
UpdateUserCardInternalServerError Internal server error

swagger:response updateUserCardInternalServerError
*/
type UpdateUserCardInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateUserCardInternalServerError creates UpdateUserCardInternalServerError with default headers values
func NewUpdateUserCardInternalServerError() *UpdateUserCardInternalServerError {

	return &UpdateUserCardInternalServerError{}
}

// WithPayload adds the payload to the update user card internal server error response
func (o *UpdateUserCardInternalServerError) WithPayload(payload *models.Error) *UpdateUserCardInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user card internal server error response
func (o *UpdateUserCardInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserCardInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
