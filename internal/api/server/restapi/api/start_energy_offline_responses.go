// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// StartEnergyOfflineOKCode is the HTTP code returned for type StartEnergyOfflineOK
const StartEnergyOfflineOKCode int = 200

/*
StartEnergyOfflineOK Start Collect Energy Response

swagger:response startEnergyOfflineOK
*/
type StartEnergyOfflineOK struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartEnergyOfflineOK creates StartEnergyOfflineOK with default headers values
func NewStartEnergyOfflineOK() *StartEnergyOfflineOK {

	return &StartEnergyOfflineOK{}
}

// WithPayload adds the payload to the start energy offline o k response
func (o *StartEnergyOfflineOK) WithPayload(payload *models.Error) *StartEnergyOfflineOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start energy offline o k response
func (o *StartEnergyOfflineOK) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartEnergyOfflineOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartEnergyOfflineBadRequestCode is the HTTP code returned for type StartEnergyOfflineBadRequest
const StartEnergyOfflineBadRequestCode int = 400

/*
StartEnergyOfflineBadRequest Bad request

swagger:response startEnergyOfflineBadRequest
*/
type StartEnergyOfflineBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartEnergyOfflineBadRequest creates StartEnergyOfflineBadRequest with default headers values
func NewStartEnergyOfflineBadRequest() *StartEnergyOfflineBadRequest {

	return &StartEnergyOfflineBadRequest{}
}

// WithPayload adds the payload to the start energy offline bad request response
func (o *StartEnergyOfflineBadRequest) WithPayload(payload *models.Error) *StartEnergyOfflineBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start energy offline bad request response
func (o *StartEnergyOfflineBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartEnergyOfflineBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartEnergyOfflineForbiddenCode is the HTTP code returned for type StartEnergyOfflineForbidden
const StartEnergyOfflineForbiddenCode int = 403

/*
StartEnergyOfflineForbidden Forbidden

swagger:response startEnergyOfflineForbidden
*/
type StartEnergyOfflineForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartEnergyOfflineForbidden creates StartEnergyOfflineForbidden with default headers values
func NewStartEnergyOfflineForbidden() *StartEnergyOfflineForbidden {

	return &StartEnergyOfflineForbidden{}
}

// WithPayload adds the payload to the start energy offline forbidden response
func (o *StartEnergyOfflineForbidden) WithPayload(payload *models.Error) *StartEnergyOfflineForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start energy offline forbidden response
func (o *StartEnergyOfflineForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartEnergyOfflineForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartEnergyOfflineUnprocessableEntityCode is the HTTP code returned for type StartEnergyOfflineUnprocessableEntity
const StartEnergyOfflineUnprocessableEntityCode int = 422

/*
StartEnergyOfflineUnprocessableEntity Unprocessable Entity

swagger:response startEnergyOfflineUnprocessableEntity
*/
type StartEnergyOfflineUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartEnergyOfflineUnprocessableEntity creates StartEnergyOfflineUnprocessableEntity with default headers values
func NewStartEnergyOfflineUnprocessableEntity() *StartEnergyOfflineUnprocessableEntity {

	return &StartEnergyOfflineUnprocessableEntity{}
}

// WithPayload adds the payload to the start energy offline unprocessable entity response
func (o *StartEnergyOfflineUnprocessableEntity) WithPayload(payload *models.Error) *StartEnergyOfflineUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start energy offline unprocessable entity response
func (o *StartEnergyOfflineUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartEnergyOfflineUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartEnergyOfflineInternalServerErrorCode is the HTTP code returned for type StartEnergyOfflineInternalServerError
const StartEnergyOfflineInternalServerErrorCode int = 500

/*
StartEnergyOfflineInternalServerError Internal server error

swagger:response startEnergyOfflineInternalServerError
*/
type StartEnergyOfflineInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartEnergyOfflineInternalServerError creates StartEnergyOfflineInternalServerError with default headers values
func NewStartEnergyOfflineInternalServerError() *StartEnergyOfflineInternalServerError {

	return &StartEnergyOfflineInternalServerError{}
}

// WithPayload adds the payload to the start energy offline internal server error response
func (o *StartEnergyOfflineInternalServerError) WithPayload(payload *models.Error) *StartEnergyOfflineInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start energy offline internal server error response
func (o *StartEnergyOfflineInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartEnergyOfflineInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
