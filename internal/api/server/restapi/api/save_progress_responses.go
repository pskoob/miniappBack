// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// SaveProgressOKCode is the HTTP code returned for type SaveProgressOK
const SaveProgressOKCode int = 200

/*
SaveProgressOK Save Progress Response

swagger:response saveProgressOK
*/
type SaveProgressOK struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaveProgressOK creates SaveProgressOK with default headers values
func NewSaveProgressOK() *SaveProgressOK {

	return &SaveProgressOK{}
}

// WithPayload adds the payload to the save progress o k response
func (o *SaveProgressOK) WithPayload(payload *models.Error) *SaveProgressOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save progress o k response
func (o *SaveProgressOK) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveProgressOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveProgressBadRequestCode is the HTTP code returned for type SaveProgressBadRequest
const SaveProgressBadRequestCode int = 400

/*
SaveProgressBadRequest Bad request

swagger:response saveProgressBadRequest
*/
type SaveProgressBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaveProgressBadRequest creates SaveProgressBadRequest with default headers values
func NewSaveProgressBadRequest() *SaveProgressBadRequest {

	return &SaveProgressBadRequest{}
}

// WithPayload adds the payload to the save progress bad request response
func (o *SaveProgressBadRequest) WithPayload(payload *models.Error) *SaveProgressBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save progress bad request response
func (o *SaveProgressBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveProgressBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveProgressForbiddenCode is the HTTP code returned for type SaveProgressForbidden
const SaveProgressForbiddenCode int = 403

/*
SaveProgressForbidden Forbidden

swagger:response saveProgressForbidden
*/
type SaveProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaveProgressForbidden creates SaveProgressForbidden with default headers values
func NewSaveProgressForbidden() *SaveProgressForbidden {

	return &SaveProgressForbidden{}
}

// WithPayload adds the payload to the save progress forbidden response
func (o *SaveProgressForbidden) WithPayload(payload *models.Error) *SaveProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save progress forbidden response
func (o *SaveProgressForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveProgressUnprocessableEntityCode is the HTTP code returned for type SaveProgressUnprocessableEntity
const SaveProgressUnprocessableEntityCode int = 422

/*
SaveProgressUnprocessableEntity Unprocessable Entity

swagger:response saveProgressUnprocessableEntity
*/
type SaveProgressUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaveProgressUnprocessableEntity creates SaveProgressUnprocessableEntity with default headers values
func NewSaveProgressUnprocessableEntity() *SaveProgressUnprocessableEntity {

	return &SaveProgressUnprocessableEntity{}
}

// WithPayload adds the payload to the save progress unprocessable entity response
func (o *SaveProgressUnprocessableEntity) WithPayload(payload *models.Error) *SaveProgressUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save progress unprocessable entity response
func (o *SaveProgressUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveProgressUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveProgressInternalServerErrorCode is the HTTP code returned for type SaveProgressInternalServerError
const SaveProgressInternalServerErrorCode int = 500

/*
SaveProgressInternalServerError Internal server error

swagger:response saveProgressInternalServerError
*/
type SaveProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaveProgressInternalServerError creates SaveProgressInternalServerError with default headers values
func NewSaveProgressInternalServerError() *SaveProgressInternalServerError {

	return &SaveProgressInternalServerError{}
}

// WithPayload adds the payload to the save progress internal server error response
func (o *SaveProgressInternalServerError) WithPayload(payload *models.Error) *SaveProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save progress internal server error response
func (o *SaveProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
