// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// GetUserCardsOKCode is the HTTP code returned for type GetUserCardsOK
const GetUserCardsOKCode int = 200

/*
GetUserCardsOK Get User Cards Response

swagger:response getUserCardsOK
*/
type GetUserCardsOK struct {

	/*
	  In: Body
	*/
	Payload *models.CardsBody `json:"body,omitempty"`
}

// NewGetUserCardsOK creates GetUserCardsOK with default headers values
func NewGetUserCardsOK() *GetUserCardsOK {

	return &GetUserCardsOK{}
}

// WithPayload adds the payload to the get user cards o k response
func (o *GetUserCardsOK) WithPayload(payload *models.CardsBody) *GetUserCardsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user cards o k response
func (o *GetUserCardsOK) SetPayload(payload *models.CardsBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserCardsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserCardsBadRequestCode is the HTTP code returned for type GetUserCardsBadRequest
const GetUserCardsBadRequestCode int = 400

/*
GetUserCardsBadRequest Bad request

swagger:response getUserCardsBadRequest
*/
type GetUserCardsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserCardsBadRequest creates GetUserCardsBadRequest with default headers values
func NewGetUserCardsBadRequest() *GetUserCardsBadRequest {

	return &GetUserCardsBadRequest{}
}

// WithPayload adds the payload to the get user cards bad request response
func (o *GetUserCardsBadRequest) WithPayload(payload *models.Error) *GetUserCardsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user cards bad request response
func (o *GetUserCardsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserCardsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserCardsForbiddenCode is the HTTP code returned for type GetUserCardsForbidden
const GetUserCardsForbiddenCode int = 403

/*
GetUserCardsForbidden Forbidden

swagger:response getUserCardsForbidden
*/
type GetUserCardsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserCardsForbidden creates GetUserCardsForbidden with default headers values
func NewGetUserCardsForbidden() *GetUserCardsForbidden {

	return &GetUserCardsForbidden{}
}

// WithPayload adds the payload to the get user cards forbidden response
func (o *GetUserCardsForbidden) WithPayload(payload *models.Error) *GetUserCardsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user cards forbidden response
func (o *GetUserCardsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserCardsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserCardsUnprocessableEntityCode is the HTTP code returned for type GetUserCardsUnprocessableEntity
const GetUserCardsUnprocessableEntityCode int = 422

/*
GetUserCardsUnprocessableEntity Unprocessable Entity

swagger:response getUserCardsUnprocessableEntity
*/
type GetUserCardsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserCardsUnprocessableEntity creates GetUserCardsUnprocessableEntity with default headers values
func NewGetUserCardsUnprocessableEntity() *GetUserCardsUnprocessableEntity {

	return &GetUserCardsUnprocessableEntity{}
}

// WithPayload adds the payload to the get user cards unprocessable entity response
func (o *GetUserCardsUnprocessableEntity) WithPayload(payload *models.Error) *GetUserCardsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user cards unprocessable entity response
func (o *GetUserCardsUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserCardsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserCardsInternalServerErrorCode is the HTTP code returned for type GetUserCardsInternalServerError
const GetUserCardsInternalServerErrorCode int = 500

/*
GetUserCardsInternalServerError Internal server error

swagger:response getUserCardsInternalServerError
*/
type GetUserCardsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserCardsInternalServerError creates GetUserCardsInternalServerError with default headers values
func NewGetUserCardsInternalServerError() *GetUserCardsInternalServerError {

	return &GetUserCardsInternalServerError{}
}

// WithPayload adds the payload to the get user cards internal server error response
func (o *GetUserCardsInternalServerError) WithPayload(payload *models.Error) *GetUserCardsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user cards internal server error response
func (o *GetUserCardsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserCardsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
