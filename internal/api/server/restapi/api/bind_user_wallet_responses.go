// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// BindUserWalletOKCode is the HTTP code returned for type BindUserWalletOK
const BindUserWalletOKCode int = 200

/*
BindUserWalletOK Bind Wallet Response

swagger:response bindUserWalletOK
*/
type BindUserWalletOK struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindUserWalletOK creates BindUserWalletOK with default headers values
func NewBindUserWalletOK() *BindUserWalletOK {

	return &BindUserWalletOK{}
}

// WithPayload adds the payload to the bind user wallet o k response
func (o *BindUserWalletOK) WithPayload(payload *models.Error) *BindUserWalletOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind user wallet o k response
func (o *BindUserWalletOK) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindUserWalletOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindUserWalletBadRequestCode is the HTTP code returned for type BindUserWalletBadRequest
const BindUserWalletBadRequestCode int = 400

/*
BindUserWalletBadRequest Bad request

swagger:response bindUserWalletBadRequest
*/
type BindUserWalletBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindUserWalletBadRequest creates BindUserWalletBadRequest with default headers values
func NewBindUserWalletBadRequest() *BindUserWalletBadRequest {

	return &BindUserWalletBadRequest{}
}

// WithPayload adds the payload to the bind user wallet bad request response
func (o *BindUserWalletBadRequest) WithPayload(payload *models.Error) *BindUserWalletBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind user wallet bad request response
func (o *BindUserWalletBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindUserWalletBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindUserWalletForbiddenCode is the HTTP code returned for type BindUserWalletForbidden
const BindUserWalletForbiddenCode int = 403

/*
BindUserWalletForbidden Forbidden

swagger:response bindUserWalletForbidden
*/
type BindUserWalletForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindUserWalletForbidden creates BindUserWalletForbidden with default headers values
func NewBindUserWalletForbidden() *BindUserWalletForbidden {

	return &BindUserWalletForbidden{}
}

// WithPayload adds the payload to the bind user wallet forbidden response
func (o *BindUserWalletForbidden) WithPayload(payload *models.Error) *BindUserWalletForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind user wallet forbidden response
func (o *BindUserWalletForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindUserWalletForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindUserWalletUnprocessableEntityCode is the HTTP code returned for type BindUserWalletUnprocessableEntity
const BindUserWalletUnprocessableEntityCode int = 422

/*
BindUserWalletUnprocessableEntity Unprocessable Entity

swagger:response bindUserWalletUnprocessableEntity
*/
type BindUserWalletUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindUserWalletUnprocessableEntity creates BindUserWalletUnprocessableEntity with default headers values
func NewBindUserWalletUnprocessableEntity() *BindUserWalletUnprocessableEntity {

	return &BindUserWalletUnprocessableEntity{}
}

// WithPayload adds the payload to the bind user wallet unprocessable entity response
func (o *BindUserWalletUnprocessableEntity) WithPayload(payload *models.Error) *BindUserWalletUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind user wallet unprocessable entity response
func (o *BindUserWalletUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindUserWalletUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindUserWalletInternalServerErrorCode is the HTTP code returned for type BindUserWalletInternalServerError
const BindUserWalletInternalServerErrorCode int = 500

/*
BindUserWalletInternalServerError Internal server error

swagger:response bindUserWalletInternalServerError
*/
type BindUserWalletInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindUserWalletInternalServerError creates BindUserWalletInternalServerError with default headers values
func NewBindUserWalletInternalServerError() *BindUserWalletInternalServerError {

	return &BindUserWalletInternalServerError{}
}

// WithPayload adds the payload to the bind user wallet internal server error response
func (o *BindUserWalletInternalServerError) WithPayload(payload *models.Error) *BindUserWalletInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind user wallet internal server error response
func (o *BindUserWalletInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindUserWalletInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
