// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// ColectReferralEarnOKCode is the HTTP code returned for type ColectReferralEarnOK
const ColectReferralEarnOKCode int = 200

/*
ColectReferralEarnOK Referral Balance Response

swagger:response colectReferralEarnOK
*/
type ColectReferralEarnOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReferralBalance `json:"body,omitempty"`
}

// NewColectReferralEarnOK creates ColectReferralEarnOK with default headers values
func NewColectReferralEarnOK() *ColectReferralEarnOK {

	return &ColectReferralEarnOK{}
}

// WithPayload adds the payload to the colect referral earn o k response
func (o *ColectReferralEarnOK) WithPayload(payload *models.ReferralBalance) *ColectReferralEarnOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the colect referral earn o k response
func (o *ColectReferralEarnOK) SetPayload(payload *models.ReferralBalance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ColectReferralEarnOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ColectReferralEarnBadRequestCode is the HTTP code returned for type ColectReferralEarnBadRequest
const ColectReferralEarnBadRequestCode int = 400

/*
ColectReferralEarnBadRequest Bad request

swagger:response colectReferralEarnBadRequest
*/
type ColectReferralEarnBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewColectReferralEarnBadRequest creates ColectReferralEarnBadRequest with default headers values
func NewColectReferralEarnBadRequest() *ColectReferralEarnBadRequest {

	return &ColectReferralEarnBadRequest{}
}

// WithPayload adds the payload to the colect referral earn bad request response
func (o *ColectReferralEarnBadRequest) WithPayload(payload *models.Error) *ColectReferralEarnBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the colect referral earn bad request response
func (o *ColectReferralEarnBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ColectReferralEarnBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ColectReferralEarnForbiddenCode is the HTTP code returned for type ColectReferralEarnForbidden
const ColectReferralEarnForbiddenCode int = 403

/*
ColectReferralEarnForbidden Forbidden

swagger:response colectReferralEarnForbidden
*/
type ColectReferralEarnForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewColectReferralEarnForbidden creates ColectReferralEarnForbidden with default headers values
func NewColectReferralEarnForbidden() *ColectReferralEarnForbidden {

	return &ColectReferralEarnForbidden{}
}

// WithPayload adds the payload to the colect referral earn forbidden response
func (o *ColectReferralEarnForbidden) WithPayload(payload *models.Error) *ColectReferralEarnForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the colect referral earn forbidden response
func (o *ColectReferralEarnForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ColectReferralEarnForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ColectReferralEarnUnprocessableEntityCode is the HTTP code returned for type ColectReferralEarnUnprocessableEntity
const ColectReferralEarnUnprocessableEntityCode int = 422

/*
ColectReferralEarnUnprocessableEntity Unprocessable Entity

swagger:response colectReferralEarnUnprocessableEntity
*/
type ColectReferralEarnUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewColectReferralEarnUnprocessableEntity creates ColectReferralEarnUnprocessableEntity with default headers values
func NewColectReferralEarnUnprocessableEntity() *ColectReferralEarnUnprocessableEntity {

	return &ColectReferralEarnUnprocessableEntity{}
}

// WithPayload adds the payload to the colect referral earn unprocessable entity response
func (o *ColectReferralEarnUnprocessableEntity) WithPayload(payload *models.Error) *ColectReferralEarnUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the colect referral earn unprocessable entity response
func (o *ColectReferralEarnUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ColectReferralEarnUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ColectReferralEarnInternalServerErrorCode is the HTTP code returned for type ColectReferralEarnInternalServerError
const ColectReferralEarnInternalServerErrorCode int = 500

/*
ColectReferralEarnInternalServerError Internal server error

swagger:response colectReferralEarnInternalServerError
*/
type ColectReferralEarnInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewColectReferralEarnInternalServerError creates ColectReferralEarnInternalServerError with default headers values
func NewColectReferralEarnInternalServerError() *ColectReferralEarnInternalServerError {

	return &ColectReferralEarnInternalServerError{}
}

// WithPayload adds the payload to the colect referral earn internal server error response
func (o *ColectReferralEarnInternalServerError) WithPayload(payload *models.Error) *ColectReferralEarnInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the colect referral earn internal server error response
func (o *ColectReferralEarnInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ColectReferralEarnInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
