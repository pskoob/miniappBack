// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// CollectReferralEarnOKCode is the HTTP code returned for type CollectReferralEarnOK
const CollectReferralEarnOKCode int = 200

/*
CollectReferralEarnOK Referral Balance Response

swagger:response collectReferralEarnOK
*/
type CollectReferralEarnOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReferralBalance `json:"body,omitempty"`
}

// NewCollectReferralEarnOK creates CollectReferralEarnOK with default headers values
func NewCollectReferralEarnOK() *CollectReferralEarnOK {

	return &CollectReferralEarnOK{}
}

// WithPayload adds the payload to the collect referral earn o k response
func (o *CollectReferralEarnOK) WithPayload(payload *models.ReferralBalance) *CollectReferralEarnOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collect referral earn o k response
func (o *CollectReferralEarnOK) SetPayload(payload *models.ReferralBalance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectReferralEarnOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectReferralEarnBadRequestCode is the HTTP code returned for type CollectReferralEarnBadRequest
const CollectReferralEarnBadRequestCode int = 400

/*
CollectReferralEarnBadRequest Bad request

swagger:response collectReferralEarnBadRequest
*/
type CollectReferralEarnBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCollectReferralEarnBadRequest creates CollectReferralEarnBadRequest with default headers values
func NewCollectReferralEarnBadRequest() *CollectReferralEarnBadRequest {

	return &CollectReferralEarnBadRequest{}
}

// WithPayload adds the payload to the collect referral earn bad request response
func (o *CollectReferralEarnBadRequest) WithPayload(payload *models.Error) *CollectReferralEarnBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collect referral earn bad request response
func (o *CollectReferralEarnBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectReferralEarnBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectReferralEarnForbiddenCode is the HTTP code returned for type CollectReferralEarnForbidden
const CollectReferralEarnForbiddenCode int = 403

/*
CollectReferralEarnForbidden Forbidden

swagger:response collectReferralEarnForbidden
*/
type CollectReferralEarnForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCollectReferralEarnForbidden creates CollectReferralEarnForbidden with default headers values
func NewCollectReferralEarnForbidden() *CollectReferralEarnForbidden {

	return &CollectReferralEarnForbidden{}
}

// WithPayload adds the payload to the collect referral earn forbidden response
func (o *CollectReferralEarnForbidden) WithPayload(payload *models.Error) *CollectReferralEarnForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collect referral earn forbidden response
func (o *CollectReferralEarnForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectReferralEarnForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectReferralEarnUnprocessableEntityCode is the HTTP code returned for type CollectReferralEarnUnprocessableEntity
const CollectReferralEarnUnprocessableEntityCode int = 422

/*
CollectReferralEarnUnprocessableEntity Unprocessable Entity

swagger:response collectReferralEarnUnprocessableEntity
*/
type CollectReferralEarnUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCollectReferralEarnUnprocessableEntity creates CollectReferralEarnUnprocessableEntity with default headers values
func NewCollectReferralEarnUnprocessableEntity() *CollectReferralEarnUnprocessableEntity {

	return &CollectReferralEarnUnprocessableEntity{}
}

// WithPayload adds the payload to the collect referral earn unprocessable entity response
func (o *CollectReferralEarnUnprocessableEntity) WithPayload(payload *models.Error) *CollectReferralEarnUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collect referral earn unprocessable entity response
func (o *CollectReferralEarnUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectReferralEarnUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectReferralEarnInternalServerErrorCode is the HTTP code returned for type CollectReferralEarnInternalServerError
const CollectReferralEarnInternalServerErrorCode int = 500

/*
CollectReferralEarnInternalServerError Internal server error

swagger:response collectReferralEarnInternalServerError
*/
type CollectReferralEarnInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCollectReferralEarnInternalServerError creates CollectReferralEarnInternalServerError with default headers values
func NewCollectReferralEarnInternalServerError() *CollectReferralEarnInternalServerError {

	return &CollectReferralEarnInternalServerError{}
}

// WithPayload adds the payload to the collect referral earn internal server error response
func (o *CollectReferralEarnInternalServerError) WithPayload(payload *models.Error) *CollectReferralEarnInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collect referral earn internal server error response
func (o *CollectReferralEarnInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectReferralEarnInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
