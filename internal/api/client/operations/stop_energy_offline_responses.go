// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// StopEnergyOfflineReader is a Reader for the StopEnergyOffline structure.
type StopEnergyOfflineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopEnergyOfflineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopEnergyOfflineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStopEnergyOfflineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStopEnergyOfflineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewStopEnergyOfflineUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStopEnergyOfflineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /stop_energy_collect/{tg_id}] StopEnergyOffline", response, response.Code())
	}
}

// NewStopEnergyOfflineOK creates a StopEnergyOfflineOK with default headers values
func NewStopEnergyOfflineOK() *StopEnergyOfflineOK {
	return &StopEnergyOfflineOK{}
}

/*
StopEnergyOfflineOK describes a response with status code 200, with default header values.

Stop Collect Energy Response
*/
type StopEnergyOfflineOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this stop energy offline o k response has a 2xx status code
func (o *StopEnergyOfflineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stop energy offline o k response has a 3xx status code
func (o *StopEnergyOfflineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop energy offline o k response has a 4xx status code
func (o *StopEnergyOfflineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stop energy offline o k response has a 5xx status code
func (o *StopEnergyOfflineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stop energy offline o k response a status code equal to that given
func (o *StopEnergyOfflineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stop energy offline o k response
func (o *StopEnergyOfflineOK) Code() int {
	return 200
}

func (o *StopEnergyOfflineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineOK %s", 200, payload)
}

func (o *StopEnergyOfflineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineOK %s", 200, payload)
}

func (o *StopEnergyOfflineOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopEnergyOfflineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopEnergyOfflineBadRequest creates a StopEnergyOfflineBadRequest with default headers values
func NewStopEnergyOfflineBadRequest() *StopEnergyOfflineBadRequest {
	return &StopEnergyOfflineBadRequest{}
}

/*
StopEnergyOfflineBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type StopEnergyOfflineBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this stop energy offline bad request response has a 2xx status code
func (o *StopEnergyOfflineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop energy offline bad request response has a 3xx status code
func (o *StopEnergyOfflineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop energy offline bad request response has a 4xx status code
func (o *StopEnergyOfflineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop energy offline bad request response has a 5xx status code
func (o *StopEnergyOfflineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stop energy offline bad request response a status code equal to that given
func (o *StopEnergyOfflineBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stop energy offline bad request response
func (o *StopEnergyOfflineBadRequest) Code() int {
	return 400
}

func (o *StopEnergyOfflineBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineBadRequest %s", 400, payload)
}

func (o *StopEnergyOfflineBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineBadRequest %s", 400, payload)
}

func (o *StopEnergyOfflineBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopEnergyOfflineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopEnergyOfflineForbidden creates a StopEnergyOfflineForbidden with default headers values
func NewStopEnergyOfflineForbidden() *StopEnergyOfflineForbidden {
	return &StopEnergyOfflineForbidden{}
}

/*
StopEnergyOfflineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StopEnergyOfflineForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this stop energy offline forbidden response has a 2xx status code
func (o *StopEnergyOfflineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop energy offline forbidden response has a 3xx status code
func (o *StopEnergyOfflineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop energy offline forbidden response has a 4xx status code
func (o *StopEnergyOfflineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop energy offline forbidden response has a 5xx status code
func (o *StopEnergyOfflineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this stop energy offline forbidden response a status code equal to that given
func (o *StopEnergyOfflineForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the stop energy offline forbidden response
func (o *StopEnergyOfflineForbidden) Code() int {
	return 403
}

func (o *StopEnergyOfflineForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineForbidden %s", 403, payload)
}

func (o *StopEnergyOfflineForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineForbidden %s", 403, payload)
}

func (o *StopEnergyOfflineForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopEnergyOfflineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopEnergyOfflineUnprocessableEntity creates a StopEnergyOfflineUnprocessableEntity with default headers values
func NewStopEnergyOfflineUnprocessableEntity() *StopEnergyOfflineUnprocessableEntity {
	return &StopEnergyOfflineUnprocessableEntity{}
}

/*
StopEnergyOfflineUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type StopEnergyOfflineUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this stop energy offline unprocessable entity response has a 2xx status code
func (o *StopEnergyOfflineUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop energy offline unprocessable entity response has a 3xx status code
func (o *StopEnergyOfflineUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop energy offline unprocessable entity response has a 4xx status code
func (o *StopEnergyOfflineUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this stop energy offline unprocessable entity response has a 5xx status code
func (o *StopEnergyOfflineUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this stop energy offline unprocessable entity response a status code equal to that given
func (o *StopEnergyOfflineUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the stop energy offline unprocessable entity response
func (o *StopEnergyOfflineUnprocessableEntity) Code() int {
	return 422
}

func (o *StopEnergyOfflineUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineUnprocessableEntity %s", 422, payload)
}

func (o *StopEnergyOfflineUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineUnprocessableEntity %s", 422, payload)
}

func (o *StopEnergyOfflineUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopEnergyOfflineUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopEnergyOfflineInternalServerError creates a StopEnergyOfflineInternalServerError with default headers values
func NewStopEnergyOfflineInternalServerError() *StopEnergyOfflineInternalServerError {
	return &StopEnergyOfflineInternalServerError{}
}

/*
StopEnergyOfflineInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StopEnergyOfflineInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this stop energy offline internal server error response has a 2xx status code
func (o *StopEnergyOfflineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stop energy offline internal server error response has a 3xx status code
func (o *StopEnergyOfflineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stop energy offline internal server error response has a 4xx status code
func (o *StopEnergyOfflineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stop energy offline internal server error response has a 5xx status code
func (o *StopEnergyOfflineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stop energy offline internal server error response a status code equal to that given
func (o *StopEnergyOfflineInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stop energy offline internal server error response
func (o *StopEnergyOfflineInternalServerError) Code() int {
	return 500
}

func (o *StopEnergyOfflineInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineInternalServerError %s", 500, payload)
}

func (o *StopEnergyOfflineInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /stop_energy_collect/{tg_id}][%d] stopEnergyOfflineInternalServerError %s", 500, payload)
}

func (o *StopEnergyOfflineInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopEnergyOfflineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
