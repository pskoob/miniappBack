// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// GetUserProgressReader is a Reader for the GetUserProgress structure.
type GetUserProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProgressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserProgressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserProgressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserProgressUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserProgressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /get_user/{tg_id}] GetUserProgress", response, response.Code())
	}
}

// NewGetUserProgressOK creates a GetUserProgressOK with default headers values
func NewGetUserProgressOK() *GetUserProgressOK {
	return &GetUserProgressOK{}
}

/*
GetUserProgressOK describes a response with status code 200, with default header values.

Get User Progress Response
*/
type GetUserProgressOK struct {
	Payload *models.User
}

// IsSuccess returns true when this get user progress o k response has a 2xx status code
func (o *GetUserProgressOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user progress o k response has a 3xx status code
func (o *GetUserProgressOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user progress o k response has a 4xx status code
func (o *GetUserProgressOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user progress o k response has a 5xx status code
func (o *GetUserProgressOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user progress o k response a status code equal to that given
func (o *GetUserProgressOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user progress o k response
func (o *GetUserProgressOK) Code() int {
	return 200
}

func (o *GetUserProgressOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressOK %s", 200, payload)
}

func (o *GetUserProgressOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressOK %s", 200, payload)
}

func (o *GetUserProgressOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetUserProgressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProgressBadRequest creates a GetUserProgressBadRequest with default headers values
func NewGetUserProgressBadRequest() *GetUserProgressBadRequest {
	return &GetUserProgressBadRequest{}
}

/*
GetUserProgressBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserProgressBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user progress bad request response has a 2xx status code
func (o *GetUserProgressBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user progress bad request response has a 3xx status code
func (o *GetUserProgressBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user progress bad request response has a 4xx status code
func (o *GetUserProgressBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user progress bad request response has a 5xx status code
func (o *GetUserProgressBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user progress bad request response a status code equal to that given
func (o *GetUserProgressBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user progress bad request response
func (o *GetUserProgressBadRequest) Code() int {
	return 400
}

func (o *GetUserProgressBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressBadRequest %s", 400, payload)
}

func (o *GetUserProgressBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressBadRequest %s", 400, payload)
}

func (o *GetUserProgressBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProgressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProgressForbidden creates a GetUserProgressForbidden with default headers values
func NewGetUserProgressForbidden() *GetUserProgressForbidden {
	return &GetUserProgressForbidden{}
}

/*
GetUserProgressForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserProgressForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user progress forbidden response has a 2xx status code
func (o *GetUserProgressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user progress forbidden response has a 3xx status code
func (o *GetUserProgressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user progress forbidden response has a 4xx status code
func (o *GetUserProgressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user progress forbidden response has a 5xx status code
func (o *GetUserProgressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user progress forbidden response a status code equal to that given
func (o *GetUserProgressForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user progress forbidden response
func (o *GetUserProgressForbidden) Code() int {
	return 403
}

func (o *GetUserProgressForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressForbidden %s", 403, payload)
}

func (o *GetUserProgressForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressForbidden %s", 403, payload)
}

func (o *GetUserProgressForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProgressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProgressUnprocessableEntity creates a GetUserProgressUnprocessableEntity with default headers values
func NewGetUserProgressUnprocessableEntity() *GetUserProgressUnprocessableEntity {
	return &GetUserProgressUnprocessableEntity{}
}

/*
GetUserProgressUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUserProgressUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user progress unprocessable entity response has a 2xx status code
func (o *GetUserProgressUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user progress unprocessable entity response has a 3xx status code
func (o *GetUserProgressUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user progress unprocessable entity response has a 4xx status code
func (o *GetUserProgressUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user progress unprocessable entity response has a 5xx status code
func (o *GetUserProgressUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get user progress unprocessable entity response a status code equal to that given
func (o *GetUserProgressUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get user progress unprocessable entity response
func (o *GetUserProgressUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUserProgressUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressUnprocessableEntity %s", 422, payload)
}

func (o *GetUserProgressUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressUnprocessableEntity %s", 422, payload)
}

func (o *GetUserProgressUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProgressUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProgressInternalServerError creates a GetUserProgressInternalServerError with default headers values
func NewGetUserProgressInternalServerError() *GetUserProgressInternalServerError {
	return &GetUserProgressInternalServerError{}
}

/*
GetUserProgressInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUserProgressInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user progress internal server error response has a 2xx status code
func (o *GetUserProgressInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user progress internal server error response has a 3xx status code
func (o *GetUserProgressInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user progress internal server error response has a 4xx status code
func (o *GetUserProgressInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user progress internal server error response has a 5xx status code
func (o *GetUserProgressInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user progress internal server error response a status code equal to that given
func (o *GetUserProgressInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user progress internal server error response
func (o *GetUserProgressInternalServerError) Code() int {
	return 500
}

func (o *GetUserProgressInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressInternalServerError %s", 500, payload)
}

func (o *GetUserProgressInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /get_user/{tg_id}][%d] getUserProgressInternalServerError %s", 500, payload)
}

func (o *GetUserProgressInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProgressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
