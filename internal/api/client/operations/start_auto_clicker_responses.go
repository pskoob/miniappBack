// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// StartAutoClickerReader is a Reader for the StartAutoClicker structure.
type StartAutoClickerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartAutoClickerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartAutoClickerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartAutoClickerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStartAutoClickerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewStartAutoClickerUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartAutoClickerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /start_auto_clicker/{tg_id}] StartAutoClicker", response, response.Code())
	}
}

// NewStartAutoClickerOK creates a StartAutoClickerOK with default headers values
func NewStartAutoClickerOK() *StartAutoClickerOK {
	return &StartAutoClickerOK{}
}

/*
StartAutoClickerOK describes a response with status code 200, with default header values.

Save Progress Response
*/
type StartAutoClickerOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this start auto clicker o k response has a 2xx status code
func (o *StartAutoClickerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start auto clicker o k response has a 3xx status code
func (o *StartAutoClickerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start auto clicker o k response has a 4xx status code
func (o *StartAutoClickerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start auto clicker o k response has a 5xx status code
func (o *StartAutoClickerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start auto clicker o k response a status code equal to that given
func (o *StartAutoClickerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start auto clicker o k response
func (o *StartAutoClickerOK) Code() int {
	return 200
}

func (o *StartAutoClickerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerOK %s", 200, payload)
}

func (o *StartAutoClickerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerOK %s", 200, payload)
}

func (o *StartAutoClickerOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartAutoClickerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAutoClickerBadRequest creates a StartAutoClickerBadRequest with default headers values
func NewStartAutoClickerBadRequest() *StartAutoClickerBadRequest {
	return &StartAutoClickerBadRequest{}
}

/*
StartAutoClickerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type StartAutoClickerBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this start auto clicker bad request response has a 2xx status code
func (o *StartAutoClickerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start auto clicker bad request response has a 3xx status code
func (o *StartAutoClickerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start auto clicker bad request response has a 4xx status code
func (o *StartAutoClickerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start auto clicker bad request response has a 5xx status code
func (o *StartAutoClickerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start auto clicker bad request response a status code equal to that given
func (o *StartAutoClickerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start auto clicker bad request response
func (o *StartAutoClickerBadRequest) Code() int {
	return 400
}

func (o *StartAutoClickerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerBadRequest %s", 400, payload)
}

func (o *StartAutoClickerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerBadRequest %s", 400, payload)
}

func (o *StartAutoClickerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartAutoClickerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAutoClickerForbidden creates a StartAutoClickerForbidden with default headers values
func NewStartAutoClickerForbidden() *StartAutoClickerForbidden {
	return &StartAutoClickerForbidden{}
}

/*
StartAutoClickerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StartAutoClickerForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this start auto clicker forbidden response has a 2xx status code
func (o *StartAutoClickerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start auto clicker forbidden response has a 3xx status code
func (o *StartAutoClickerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start auto clicker forbidden response has a 4xx status code
func (o *StartAutoClickerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this start auto clicker forbidden response has a 5xx status code
func (o *StartAutoClickerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this start auto clicker forbidden response a status code equal to that given
func (o *StartAutoClickerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the start auto clicker forbidden response
func (o *StartAutoClickerForbidden) Code() int {
	return 403
}

func (o *StartAutoClickerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerForbidden %s", 403, payload)
}

func (o *StartAutoClickerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerForbidden %s", 403, payload)
}

func (o *StartAutoClickerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartAutoClickerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAutoClickerUnprocessableEntity creates a StartAutoClickerUnprocessableEntity with default headers values
func NewStartAutoClickerUnprocessableEntity() *StartAutoClickerUnprocessableEntity {
	return &StartAutoClickerUnprocessableEntity{}
}

/*
StartAutoClickerUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type StartAutoClickerUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this start auto clicker unprocessable entity response has a 2xx status code
func (o *StartAutoClickerUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start auto clicker unprocessable entity response has a 3xx status code
func (o *StartAutoClickerUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start auto clicker unprocessable entity response has a 4xx status code
func (o *StartAutoClickerUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this start auto clicker unprocessable entity response has a 5xx status code
func (o *StartAutoClickerUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this start auto clicker unprocessable entity response a status code equal to that given
func (o *StartAutoClickerUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the start auto clicker unprocessable entity response
func (o *StartAutoClickerUnprocessableEntity) Code() int {
	return 422
}

func (o *StartAutoClickerUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerUnprocessableEntity %s", 422, payload)
}

func (o *StartAutoClickerUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerUnprocessableEntity %s", 422, payload)
}

func (o *StartAutoClickerUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartAutoClickerUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAutoClickerInternalServerError creates a StartAutoClickerInternalServerError with default headers values
func NewStartAutoClickerInternalServerError() *StartAutoClickerInternalServerError {
	return &StartAutoClickerInternalServerError{}
}

/*
StartAutoClickerInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StartAutoClickerInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this start auto clicker internal server error response has a 2xx status code
func (o *StartAutoClickerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start auto clicker internal server error response has a 3xx status code
func (o *StartAutoClickerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start auto clicker internal server error response has a 4xx status code
func (o *StartAutoClickerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start auto clicker internal server error response has a 5xx status code
func (o *StartAutoClickerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start auto clicker internal server error response a status code equal to that given
func (o *StartAutoClickerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start auto clicker internal server error response
func (o *StartAutoClickerInternalServerError) Code() int {
	return 500
}

func (o *StartAutoClickerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerInternalServerError %s", 500, payload)
}

func (o *StartAutoClickerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_auto_clicker/{tg_id}][%d] startAutoClickerInternalServerError %s", 500, payload)
}

func (o *StartAutoClickerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartAutoClickerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
