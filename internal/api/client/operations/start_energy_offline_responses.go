// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// StartEnergyOfflineReader is a Reader for the StartEnergyOffline structure.
type StartEnergyOfflineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartEnergyOfflineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartEnergyOfflineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartEnergyOfflineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStartEnergyOfflineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewStartEnergyOfflineUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartEnergyOfflineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /start_energy_collect/{tg_id}] StartEnergyOffline", response, response.Code())
	}
}

// NewStartEnergyOfflineOK creates a StartEnergyOfflineOK with default headers values
func NewStartEnergyOfflineOK() *StartEnergyOfflineOK {
	return &StartEnergyOfflineOK{}
}

/*
StartEnergyOfflineOK describes a response with status code 200, with default header values.

Start Collect Energy Response
*/
type StartEnergyOfflineOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this start energy offline o k response has a 2xx status code
func (o *StartEnergyOfflineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start energy offline o k response has a 3xx status code
func (o *StartEnergyOfflineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start energy offline o k response has a 4xx status code
func (o *StartEnergyOfflineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start energy offline o k response has a 5xx status code
func (o *StartEnergyOfflineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start energy offline o k response a status code equal to that given
func (o *StartEnergyOfflineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start energy offline o k response
func (o *StartEnergyOfflineOK) Code() int {
	return 200
}

func (o *StartEnergyOfflineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineOK %s", 200, payload)
}

func (o *StartEnergyOfflineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineOK %s", 200, payload)
}

func (o *StartEnergyOfflineOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartEnergyOfflineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartEnergyOfflineBadRequest creates a StartEnergyOfflineBadRequest with default headers values
func NewStartEnergyOfflineBadRequest() *StartEnergyOfflineBadRequest {
	return &StartEnergyOfflineBadRequest{}
}

/*
StartEnergyOfflineBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type StartEnergyOfflineBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this start energy offline bad request response has a 2xx status code
func (o *StartEnergyOfflineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start energy offline bad request response has a 3xx status code
func (o *StartEnergyOfflineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start energy offline bad request response has a 4xx status code
func (o *StartEnergyOfflineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start energy offline bad request response has a 5xx status code
func (o *StartEnergyOfflineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start energy offline bad request response a status code equal to that given
func (o *StartEnergyOfflineBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start energy offline bad request response
func (o *StartEnergyOfflineBadRequest) Code() int {
	return 400
}

func (o *StartEnergyOfflineBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineBadRequest %s", 400, payload)
}

func (o *StartEnergyOfflineBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineBadRequest %s", 400, payload)
}

func (o *StartEnergyOfflineBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartEnergyOfflineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartEnergyOfflineForbidden creates a StartEnergyOfflineForbidden with default headers values
func NewStartEnergyOfflineForbidden() *StartEnergyOfflineForbidden {
	return &StartEnergyOfflineForbidden{}
}

/*
StartEnergyOfflineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StartEnergyOfflineForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this start energy offline forbidden response has a 2xx status code
func (o *StartEnergyOfflineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start energy offline forbidden response has a 3xx status code
func (o *StartEnergyOfflineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start energy offline forbidden response has a 4xx status code
func (o *StartEnergyOfflineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this start energy offline forbidden response has a 5xx status code
func (o *StartEnergyOfflineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this start energy offline forbidden response a status code equal to that given
func (o *StartEnergyOfflineForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the start energy offline forbidden response
func (o *StartEnergyOfflineForbidden) Code() int {
	return 403
}

func (o *StartEnergyOfflineForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineForbidden %s", 403, payload)
}

func (o *StartEnergyOfflineForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineForbidden %s", 403, payload)
}

func (o *StartEnergyOfflineForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartEnergyOfflineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartEnergyOfflineUnprocessableEntity creates a StartEnergyOfflineUnprocessableEntity with default headers values
func NewStartEnergyOfflineUnprocessableEntity() *StartEnergyOfflineUnprocessableEntity {
	return &StartEnergyOfflineUnprocessableEntity{}
}

/*
StartEnergyOfflineUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type StartEnergyOfflineUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this start energy offline unprocessable entity response has a 2xx status code
func (o *StartEnergyOfflineUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start energy offline unprocessable entity response has a 3xx status code
func (o *StartEnergyOfflineUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start energy offline unprocessable entity response has a 4xx status code
func (o *StartEnergyOfflineUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this start energy offline unprocessable entity response has a 5xx status code
func (o *StartEnergyOfflineUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this start energy offline unprocessable entity response a status code equal to that given
func (o *StartEnergyOfflineUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the start energy offline unprocessable entity response
func (o *StartEnergyOfflineUnprocessableEntity) Code() int {
	return 422
}

func (o *StartEnergyOfflineUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineUnprocessableEntity %s", 422, payload)
}

func (o *StartEnergyOfflineUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineUnprocessableEntity %s", 422, payload)
}

func (o *StartEnergyOfflineUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartEnergyOfflineUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartEnergyOfflineInternalServerError creates a StartEnergyOfflineInternalServerError with default headers values
func NewStartEnergyOfflineInternalServerError() *StartEnergyOfflineInternalServerError {
	return &StartEnergyOfflineInternalServerError{}
}

/*
StartEnergyOfflineInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StartEnergyOfflineInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this start energy offline internal server error response has a 2xx status code
func (o *StartEnergyOfflineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start energy offline internal server error response has a 3xx status code
func (o *StartEnergyOfflineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start energy offline internal server error response has a 4xx status code
func (o *StartEnergyOfflineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start energy offline internal server error response has a 5xx status code
func (o *StartEnergyOfflineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start energy offline internal server error response a status code equal to that given
func (o *StartEnergyOfflineInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start energy offline internal server error response
func (o *StartEnergyOfflineInternalServerError) Code() int {
	return 500
}

func (o *StartEnergyOfflineInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineInternalServerError %s", 500, payload)
}

func (o *StartEnergyOfflineInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /start_energy_collect/{tg_id}][%d] startEnergyOfflineInternalServerError %s", 500, payload)
}

func (o *StartEnergyOfflineInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartEnergyOfflineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
