// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/pskoob/miniappBack/internal/api/definition"
)

// GetUserCardsReader is a Reader for the GetUserCards structure.
type GetUserCardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserCardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserCardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserCardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserCardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserCardsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserCardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /get_user_cards/{tg_id}] GetUserCards", response, response.Code())
	}
}

// NewGetUserCardsOK creates a GetUserCardsOK with default headers values
func NewGetUserCardsOK() *GetUserCardsOK {
	return &GetUserCardsOK{}
}

/*
GetUserCardsOK describes a response with status code 200, with default header values.

Get User Cards Response
*/
type GetUserCardsOK struct {
	Payload *models.CardsBody
}

// IsSuccess returns true when this get user cards o k response has a 2xx status code
func (o *GetUserCardsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user cards o k response has a 3xx status code
func (o *GetUserCardsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user cards o k response has a 4xx status code
func (o *GetUserCardsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user cards o k response has a 5xx status code
func (o *GetUserCardsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user cards o k response a status code equal to that given
func (o *GetUserCardsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user cards o k response
func (o *GetUserCardsOK) Code() int {
	return 200
}

func (o *GetUserCardsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsOK %s", 200, payload)
}

func (o *GetUserCardsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsOK %s", 200, payload)
}

func (o *GetUserCardsOK) GetPayload() *models.CardsBody {
	return o.Payload
}

func (o *GetUserCardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CardsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserCardsBadRequest creates a GetUserCardsBadRequest with default headers values
func NewGetUserCardsBadRequest() *GetUserCardsBadRequest {
	return &GetUserCardsBadRequest{}
}

/*
GetUserCardsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserCardsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user cards bad request response has a 2xx status code
func (o *GetUserCardsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user cards bad request response has a 3xx status code
func (o *GetUserCardsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user cards bad request response has a 4xx status code
func (o *GetUserCardsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user cards bad request response has a 5xx status code
func (o *GetUserCardsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user cards bad request response a status code equal to that given
func (o *GetUserCardsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user cards bad request response
func (o *GetUserCardsBadRequest) Code() int {
	return 400
}

func (o *GetUserCardsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsBadRequest %s", 400, payload)
}

func (o *GetUserCardsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsBadRequest %s", 400, payload)
}

func (o *GetUserCardsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserCardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserCardsForbidden creates a GetUserCardsForbidden with default headers values
func NewGetUserCardsForbidden() *GetUserCardsForbidden {
	return &GetUserCardsForbidden{}
}

/*
GetUserCardsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserCardsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user cards forbidden response has a 2xx status code
func (o *GetUserCardsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user cards forbidden response has a 3xx status code
func (o *GetUserCardsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user cards forbidden response has a 4xx status code
func (o *GetUserCardsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user cards forbidden response has a 5xx status code
func (o *GetUserCardsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user cards forbidden response a status code equal to that given
func (o *GetUserCardsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user cards forbidden response
func (o *GetUserCardsForbidden) Code() int {
	return 403
}

func (o *GetUserCardsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsForbidden %s", 403, payload)
}

func (o *GetUserCardsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsForbidden %s", 403, payload)
}

func (o *GetUserCardsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserCardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserCardsUnprocessableEntity creates a GetUserCardsUnprocessableEntity with default headers values
func NewGetUserCardsUnprocessableEntity() *GetUserCardsUnprocessableEntity {
	return &GetUserCardsUnprocessableEntity{}
}

/*
GetUserCardsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUserCardsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user cards unprocessable entity response has a 2xx status code
func (o *GetUserCardsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user cards unprocessable entity response has a 3xx status code
func (o *GetUserCardsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user cards unprocessable entity response has a 4xx status code
func (o *GetUserCardsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user cards unprocessable entity response has a 5xx status code
func (o *GetUserCardsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get user cards unprocessable entity response a status code equal to that given
func (o *GetUserCardsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get user cards unprocessable entity response
func (o *GetUserCardsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUserCardsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsUnprocessableEntity %s", 422, payload)
}

func (o *GetUserCardsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsUnprocessableEntity %s", 422, payload)
}

func (o *GetUserCardsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserCardsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserCardsInternalServerError creates a GetUserCardsInternalServerError with default headers values
func NewGetUserCardsInternalServerError() *GetUserCardsInternalServerError {
	return &GetUserCardsInternalServerError{}
}

/*
GetUserCardsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUserCardsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user cards internal server error response has a 2xx status code
func (o *GetUserCardsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user cards internal server error response has a 3xx status code
func (o *GetUserCardsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user cards internal server error response has a 4xx status code
func (o *GetUserCardsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user cards internal server error response has a 5xx status code
func (o *GetUserCardsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user cards internal server error response a status code equal to that given
func (o *GetUserCardsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user cards internal server error response
func (o *GetUserCardsInternalServerError) Code() int {
	return 500
}

func (o *GetUserCardsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsInternalServerError %s", 500, payload)
}

func (o *GetUserCardsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /get_user_cards/{tg_id}][%d] getUserCardsInternalServerError %s", 500, payload)
}

func (o *GetUserCardsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserCardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
